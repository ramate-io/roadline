# This workflow deploys preview versions for each commit/PR using GitHub Pages
# and automatically cleans up when PRs are merged or closed.

name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # Deploy preview for PR commits
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    environment:
      name: preview-${{ github.event.number }}
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Deploy Preview
        uses: ./.github/workflows/nix-command.yml
        with:
          command: |
            # Build with Trunk
            trunk build --release --public-url "/preview-${{ github.event.number }}"
            
            # Setup Pages
            mkdir -p ~/.config/gh
            echo "github.com:
              oauth_token: ${{ secrets.GITHUB_TOKEN }}" > ~/.config/gh/hosts.yml
            
            # Create deployment
            gh api repos/${{ github.repository }}/pages \
              --method POST \
              --field source[branch]=gh-pages \
              --field source[path]=/preview-${{ github.event.number }} \
              --field source[type]=branch || true
            
            # Upload to gh-pages branch
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
            # Clone gh-pages branch
            git clone --branch gh-pages --single-branch https://github.com/${{ github.repository }}.git gh-pages
            
            # Copy dist to preview directory
            mkdir -p gh-pages/preview-${{ github.event.number }}
            cp -r dist/* gh-pages/preview-${{ github.event.number }}/
            
            # Commit and push
            cd gh-pages
            git add .
            git commit -m "Deploy preview for PR #${{ github.event.number }}" || true
            git push origin gh-pages
            
            echo "Preview deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview-${{ github.event.number }}"
          nix_flake_path: '.'
          runner: 'ubuntu-latest'

  # Clean up preview when PR is closed/merged
  cleanup-preview:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Cleanup Preview
        uses: ./.github/workflows/nix-command.yml
        with:
          command: |
            # Setup git
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
            # Clone gh-pages branch
            git clone --branch gh-pages --single-branch https://github.com/${{ github.repository }}.git gh-pages
            
            # Remove preview directory
            rm -rf gh-pages/preview-${{ github.event.number }}
            
            # Commit and push cleanup
            cd gh-pages
            git add .
            git commit -m "Cleanup preview for PR #${{ github.event.number }}" || true
            git push origin gh-pages
            
            echo "Cleaned up preview for PR #${{ github.event.number }}"
          nix_flake_path: '.'
          runner: 'ubuntu-latest'
